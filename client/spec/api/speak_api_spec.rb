=begin
#speechapi

#Speech APIs enable you to recognize speech and convert it to text using advanced machine learning, and also to convert text to speech.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveVoiceRecognitionApiClient::SpeakApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SpeakApi' do
  before do
    # run before each test
    @instance = CloudmersiveVoiceRecognitionApiClient::SpeakApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SpeakApi' do
    it 'should create an instance of SpeakApi' do
      expect(@instance).to be_instance_of(CloudmersiveVoiceRecognitionApiClient::SpeakApi)
    end
  end

  # unit tests for speak_post
  # Perform text-to-speech on a string
  # Takes as input a string and a file format (mp3 or wav) and outputs a wave form in the appropriate format.
  # @param format File format to generate response in; possible values are \&quot;mp3\&quot; or \&quot;wav\&quot;
  # @param text The text you would like to conver to speech.  Be sure to surround with quotes, e.g. \&quot;The quick brown fox jumps over the lazy dog.\&quot;
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'speak_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for speak_text_to_speech
  # Perform text-to-speech on a string
  # Takes as input a string and a file format (mp3 or wav) and outputs a wave form in the appropriate format.
  # @param req_config String input request
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'speak_text_to_speech test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
